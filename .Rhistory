out <- as.character(paste(out_p1,out_p2,sep=""))
}
if(abs(x["Z"])<4.8 & x["FF"]<4.2) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
out
lamb_clas <- function(points,slp){
var <- vars_lamb(points)
wt <- apply(var,1,lamb_wt)
return(wt)
}
lamb_clas()
slp <- download_ncep(year_range = c(2017,2017))
points <- get_lamb_points(-5,40)
lamb_clas <- function(points,slp){
var <- vars_lamb(points)
wt <- apply(var,1,lamb_wt)
return(wt)
}
vars_lamb <- function(points, slp) {
pp <- inner_join(points, slp, by = c("lon","lat")) %>%
select(-c(lat,lon)) %>%
pivot_wider(names_from = label,values_from = value)
x<- pp
SF <- 1.305*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 0.85*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.12*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.91*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
var <- data.frame(SF,WF,D,ZS,ZW,FF,Z)
}
lamb_wt <- function(x){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
if(abs(x["Z"])<4.8 & x["FF"]<4.2) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
lamb_clas()
pp <- inner_join(points, slp, by = c("lon","lat")) %>%
select(-c(lat,lon)) %>%
pivot_wider(names_from = label,values_from = value)
lamb_clas <- function(points=points,slp){
var <- vars_lamb(points)
wt <- apply(var,1,lamb_wt)
return(wt)
}
lamb_clas()
library(synoptReg)
library(tidyr)
slp <- download_ncep(year_range = c(2017,2017))
lamb_clas <- function(points=points,slp=slp){
var <- vars_lamb(points)
wt <- apply(var,1,lamb_wt)
return(wt)
}
lamb_clas()
lamb_clas <- function(points,slp){
var <- vars_lamb(points,slp)
wt <- apply(var,1,lamb_wt)
return(wt)
}
vars_lamb <- function(points, slp) {
pp <- inner_join(points, slp, by = c("lon","lat")) %>%
select(-c(lat,lon)) %>%
pivot_wider(names_from = label,values_from = value)
x<- pp
SF <- 1.305*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 0.85*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.12*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.91*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
var <- data.frame(SF,WF,D,ZS,ZW,FF,Z)
}
lamb_wt <- function(x){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
if(abs(x["Z"])<4.8 & x["FF"]<4.2) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
lamb_clas()
points <- get_lamb_points(-5,40)
lamb_clas(points, slp)
var
slp
points
slp
a <- 1:5
b<- 2:6
tibble(a,b)
time <- unique(slp$time)
time
clas <- tibble(time,wt)
var <- vars_lamb(points,slp)
wt <- apply(var,1,lamb_wt)
# clas
time <- unique(slp$time)
clas <- tibble(time,wt)
clas
# grid clas
grid_clas <- inner_join(clas, slp, by = "time")
grid_clas
# grid clas
grid_clas <- inner_join(clas, slp, by = "time") %>%
group_by(lon,lat,wt) %>%
summarise(value)
grid_clas
var <- vars_lamb(points,slp)
WT <- apply(var,1,lamb_wt)
# clas
time <- unique(slp$time)
clas <- tibble(time,WT)
# grid clas
grid_clas <- inner_join(clas, slp, by = "time") %>%
group_by(lon,lat,WT) %>%
summarise(value)
ggplot()+
geom_sf(data = borders, fill = "transparent")+
geom_contour2(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-15,15), expand = c(0, 0))+
scale_y_continuous(limits = c(30,55), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
library(metR)
ggplot()+
geom_sf(data = borders, fill = "transparent")+
geom_contour2(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-15,15), expand = c(0, 0))+
scale_y_continuous(limits = c(30,55), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
grid_clas
ggplot()+
geom_sf(data = borders, fill = "transparent")+
geom_contour2(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
ggplot()+
geom_sf(data = borders, fill = "transparent")+
geom_contour2(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4)
ggplot()+
geom_sf(data = borders, fill = "transparent")+
geom_contour2(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
world <- ne_countries(scale = "medium",returnclass = "sf")
ggplot()+
geom_sf(data = world, fill = "transparent")+
geom_contour2(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
grid_clas
grid_clas$WT <- as.factor(grid_clas$WT)
ggplot()+
geom_sf(data = world, fill = "transparent")+
geom_contour2(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
# grid clas
grid_clas <- inner_join(clas, slp, by = "time") %>%
group_by(lon,lat,WT) %>%
summarise(value)
grid_clas
summary(grid_clas)
str(grid_clas)
# grid clas
grid_clas <- inner_join(clas, slp, by = "time") %>%
group_by(lon,lat,WT) %>%
summarise(value) %>% ungroup()
ggplot()+
geom_sf(data = world, fill = "transparent")+
geom_contour2(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
grid_clas
ggplot()+
ggplot()+
geom_contour2(data = grid_clas, aes(lon,lat,z = value))+
facet_wrap(~WT)
warnings()
filter(grid_clas, WT == A)
filter(grid_clas, WT == "A")
d <- filter(grid_clas, WT == "A")
summary(d)
ggplot()+
geom_contour2(data = grid_clas, aes(lon,lat,z = d))+
facet_wrap(~WT)
ggplot()+
geom_contour2(data = d, aes(lon,lat,z = value))+
facet_wrap(~WT)
ggplot()+
geom_contour2(data = d, aes(lon,lat,z = value))
ggplot()+
geom_tile(data = d, aes(lon,lat,fill = value))
ggplot()+
geom_tile(data = d, aes(lon,lat,fill = value))+
geom_contour(data = d,aes(lon,lat,z = value))
ggplot()+
geom_tile(data = d, aes(lon,lat,fill = value))+
geom_contour2(data = d,aes(lon,lat,z = value))
ggplot()+
geom_tile(data = d, aes(lon,lat,fill = value))+
geom_contour(data = d,aes(lon,lat,z = value))
ggplot()+
geom_sf(data = world, fill = "transparent")+
geom_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
ggplot()+
geom_sf(data = world, fill = "transparent")+
geom_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
ggplot()+
geom_sf(data = world, fill = "transparent")+
geom_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_label_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
warnings
warnings()
# grid clas
grid_clas <- inner_join(clas, slp, by = "time") %>%
group_by(lon,lat,WT) %>%
summarise(value) %>% ungroup() %>%
distinct(lon,lat)
# grid clas
grid_clas <- inner_join(clas, slp, by = "time") %>%
group_by(lon,lat,WT) %>%
summarise(value) %>% ungroup() %>%
distinct(lon,lat,.keep_all = T)
ggplot()+
geom_sf(data = world, fill = "transparent")+
geom_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
# grid clas
grid_clas <- inner_join(clas, slp, by = "time") %>%
group_by(lon,lat,WT) %>%
summarise(value) %>% ungroup() %>%
distinct(lon,lat,WT.keep_all = T)
ggplot()+
geom_sf(data = world, fill = "transparent")+
geom_contour2(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
grid_clas
# grid clas
grid_clas <- inner_join(clas, slp, by = "time") %>%
group_by(lon,lat,WT) %>%
summarise(value) %>% ungroup() %>%
distinct(lon,lat,WT,.keep_all = T)
ggplot()+
geom_sf(data = world, fill = "transparent")+
geom_contour2(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
binwidth = 4, color = "black") +
geom_text_contour(data =grid_clas,
aes(x=lon,y=lat,z=value/100),
stroke = 0.15,binwidth = 4) +
facet_wrap(~WT, ncol = 4) +
scale_x_continuous(limits = c(-30,10), expand = c(0, 0))+
scale_y_continuous(limits = c(30,60), expand = c(0,0))+
theme_bw() + theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom")
warnings()
remove.packages("synoptReg")
remotes::install_github("lemuscanovas/synoptReg")
library(synoptReg)
roxygen2::roxygenise()
remove.packages("synoptReg")
remotes::install_github("lemuscanovas/synoptReg")
get_lamb_points <- function(x,y) {
xi <- 10
yi <- 5
gp_y <- y - seq(-10,10,by= 5)
gp_x <- x - c(-15,-5,5,15)
pre_scheme <- expand.grid(gp_y,gp_x) %>%
setNames(c("y","x"))
corners <- filter(pre_scheme, x == min(x) & y == min(y)|
x == min(x) & y == max(y)|
x == max(x) & y == min(y)|
x == max(x) & y == max(y))
jc_scheme <- cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(TF == F) %>% select(-TF) %>%
cbind.data.frame(c("P6","P10","P14",
"P2","P5","P9","P13","P16",
"P1","P4","P8","P12","P15",
"P3","P7","P11")) %>% setNames(c("lat","lon","label"))
return(jc_scheme)
}
a <- get_lamb_points(-5,40)
library(magrittr)
a <- get_lamb_points(-5,40)
library(tidyverse)
a <- get_lamb_points(-5,40)
a
library(synoptReg)
slp <- download_ncep(year_range = c(2017,2017))
lamb_clas(a,slp)
a
slp
lamb_clas(points = a,slp = a)
lamb_clas(points = a,slp = slp)
remove.packages("synoptReg")
remotes::install_github("lemuscanovas/synoptReg")
library(synoptReg)
library(magrittr)
library(ggplot2)
library(dplyr)
library(sf)
library(rnaturalearth)
get_lamb_points <- function(x,y) {
xi <- 10
yi <- 5
gp_y <- y - seq(-10,10,by= 5)
gp_x <- x - c(-15,-5,5,15)
pre_scheme <- expand.grid(gp_y,gp_x) %>%
setNames(c("y","x"))
corners <- filter(pre_scheme, x == min(x) & y == min(y)|
x == min(x) & y == max(y)|
x == max(x) & y == min(y)|
x == max(x) & y == max(y))
jc_scheme <- cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(TF == F) %>% select(-TF) %>%
cbind.data.frame(c("P6","P10","P14",
"P2","P5","P9","P13","P16",
"P1","P4","P8","P12","P15",
"P3","P7","P11")) %>% setNames(c("lat","lon","label"))
return(jc_scheme)
}
a <- get_lamb_points(-5,40)
slp <- download_ncep(year_range = c(2017,2017))
lamb_clas(points = a,slp = slp)
library(tidyverse)
lamb_clas(points = a,slp = slp)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
