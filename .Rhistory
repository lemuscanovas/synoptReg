table(cl$clas$)
table(cl$clas$WT)
lamb_wt <- function(x,U = F){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<500 & x["FF"]<500) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
cl <- lamb_clas2(points = points, mslp = mslp)
table(cl$clas$WT)
lamb_clas <- function(points,mslp, U = FALSE){
var <- vars_lamb(points,mslp,U)
WT <- apply(var,1,lamb_wt)
# clas
time <- unique(mslp$time)
clas <- tibble(time,WT)
# grid clas
grid_clas <- inner_join(clas, mslp, by = "time") %>%
group_by(.data$lon,.data$lat,.data$WT) %>%
summarise(.data$value) %>% ungroup() %>%
distinct(.data$lon,.data$lat,.data$WT,.keep_all = T)
return(list(clas = clas,
grid_clas = grid_clas))
}
vars_lamb <- function(points, mslp, U = F) {
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
x<- pp
if(U == F){ #Trigo & DaCamara, 2000
SF <- 1.305*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 0.85*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.12*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.91*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
} else { # Jones et al., 1993
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
}
var <- data.frame(SF,WF,D,ZS,ZW,FF,Z)
}
lamb_wt <- function(x,U = F){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<500 & x["FF"]<500) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
cl <- lamb_clas(points = points, mslp = mslp,U = T)
table(cl$clas$WT)
lamb_wt <- function(x,U = F){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<1000 & x["FF"]<5000) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
cl <- lamb_clas(points = points, mslp = mslp,U = T)
table(cl$clas$WT)
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
pp
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
x<- pp
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
SF
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 0.85*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.12*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.91*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
Z
sum(abs(z)<6)
sum(abs(Z)<6)
FF
sum(abs(FF)<6)
WF
WF <- 0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5)
WF
WF <- (0.5*(x$P12+x$P13))-(0.5*(x$P4+x$P5))
WF
pp
points
plot_lamb_scheme(points)
sum(abs(FF)<6)
min(FF)
FF <- (SF^2+WF^2)
FF
min(FF)
FF <- (SF^2+WF^2)^(1/2)
FF
inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value))
names(pp)
download_ncep(lon_range = c(-10,30),month_range = c(6,7,8))
cl <-download_ncep(lon_range = c(-10,30),month_range = c(6,7,8))
lamb_clas(points,cl,U=T)
aa <-lamb_clas(points,cl,U=T)
table(aa$clas$WT)
mslp <- cl
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
x<- pp
SF <- 1.305*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
SF
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- 0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5)
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
FF
min(FF)
SF
SF <- 1.74*(0.25*(x$P5+(2*x$P9)+x$P13)-0.25*(x$P4+(2*x$P8)+x$P12))
SF
SF <- 1.74*(0.25*(x$P5+(2*x$P9)+x$P13)-0.25*(x$P4+(2*x$P8)+x$P12))
SF
FF <- ((SF^2)+(WF^2))^(1/2)
FF
min(FF)
FF <- (SF+WF)^(1/2)
FF
FF <- (SF^2+WF^2)
FF
min(FF)
SF <- 1.305*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 0.85*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.12*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.91*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
min(FF)
min(Z)
min(abs(Z))
Z <- ZS+ZW
min(abs(Z))
mslp
mslp$value<-mslp$value/100
mslp
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
x<- pp
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
SF
WF <- 0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5)
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
FF
Z <- ZS+ZW
Z
library(synoptReg)
data(mslp)
mslp$value <- mslp$value/100
?lamb_clas
points <- get_lamb_points(x = 5,y = 40)
lamb_clas(points = points, mslp = mslp)
points <- get_lamb_points(x = 5,y = 40)
x<-lamb_clas(points = points, mslp = mslp)
table(x$clas$WT)
points <- get_lamb_points(x = 5,y = 40)
x<-lamb_clas(points = points, mslp = mslp,U = T)
table(x$clas$WT)
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
library(tidyverse)
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
pp
x<- pp
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
SF
WF <- 0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5)
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
FF
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<6 & x["FF"]<6) out <- "U"
abs(x["Z"])<6 & x["FF"]<6
abs(Z)<6 & FF<6
remove.packages("synoptReg")
lamb_clas <- function(points,mslp, U = FALSE){
var <- vars_lamb(points,mslp,U)
WT <- apply(var,1,lamb_wt)
# clas
time <- unique(mslp$time)
clas <- tibble(time,WT)
# grid clas
grid_clas <- inner_join(clas, mslp, by = "time") %>%
group_by(.data$lon,.data$lat,.data$WT) %>%
summarise(.data$value) %>% ungroup() %>%
distinct(.data$lon,.data$lat,.data$WT,.keep_all = T)
return(list(clas = clas,
grid_clas = grid_clas))
}
vars_lamb <- function(points, mslp, U) {
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
x<- pp
if(U == F){ #Trigo & DaCamara, 2000
SF <- 1.305*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 0.85*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.12*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.91*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
} else { # Jones et al., 1993
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- 0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5)
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
}
var <- data.frame(SF,WF,D,ZS,ZW,FF,Z)
}
lamb_wt <- function(x,U){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<6 & x["FF"]<6) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
points <- get_lamb_points(x = 5,y = 40)
x<-lamb_clas(points = points, mslp = mslp,U = T)
lamb_wt <- function(x,U = T){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<6 & x["FF"]<6) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
points <- get_lamb_points(x = 5,y = 40)
x<-lamb_clas(points = points, mslp = mslp,U = T)
x
table(x$clas$WT)
points <- get_lamb_points(x = 5,y = 40)
x<-lamb_clas(points = points, mslp = mslp,U = F)
table(x$clas$WT)
devtools::check()
devtools::check()
checkCRAN()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
remove.packages("synoptReg")
mslpç
remotes::install_github("lemuscanovas/synoptReg")
data.frame(a = 0:20,b = 2:40, c = 30:50, d = 10:30)
data.frame(a = 0:20,b = 20:40, c = 30:50, d = 10:30)
a <- data.frame(a = 0:20,b = 20:40, c = 30:50, d = 10:30)
prcomp(a)
x <- prcomp(a)
x$sdev
summary(x)
remotes::install_github("lemuscanovas/synoptReg")
library(synoptReg)
data(mslp)
mslp
mslp$value <- mslp$value/100
mslp
?lamb_clas
points <- get_lamb_points(x = 5,y = 40)
ml <- lamb_clas(points = points, mslp = mslp)
ml
table(ml$clas$WT)
ml <- lamb_clas(points = points, mslp = mslp,U = T)
table(ml$clas$WT)
prop.table(ml$clas$WT)
table(ml$clas$WT)
prop.table(ml$clas$WT,1)
prop.table(ml$clas$WT,2)
prop.table(table(ml$clas$WT))
ml <- lamb_clas(points = points, mslp = mslp,U = T,thr = c(4.8,4.2))
prop.table(table(ml$clas$WT))
?synoptclas
data(mslp)
data(z500)
# Tidying our atmospheric variables (500 hPa geopotential height
# and mean sea level pressure) together.
# Time subset between two dates
atm_data1 <- tidy_nc(x = list(mslp,z500),
name_vars = c("mslp","z500"))
# S-mode classification
smode_clas <- synoptclas(atm_data1, ncomp = 6)
# Time subset using a vector of dates of interest
dates_int <- c("2000-01-25","2000-04-01","2000-07-14","2001-05-08","2002-12-20")
atm_data2 <- tidy_nc(x = list(mslp,z500),
time_subset = dates_int,
name_vars = c("mslp","z500"))
# S-mode classification
tmode_clas <- synoptclas(atm_data2, ncomp = 2, matrix_mode = "T-mode")
tmode_clas <- synoptclas(atm_data2, ncomp = 10, matrix_mode = "T-mode",)
tmode_clas <- synoptclas(atm_data2, ncomp = 10, matrix_mode = "T-mode")
tmode_clas <- synoptclas(atm_data2, ncomp = 5, matrix_mode = "T-mode")
atm_data2
unique(tmode_clas$clas_abs$WT)
remotes::install_github("lemuscanovas/synoptReg")
library(synoptReg)
?synoptClas
?synoptlas
?synoptclas
data(mslp)
data(z500)
atm_data1 <- tidy_nc(x = list(mslp,z500),
name_vars = c("mslp","z500"))
atm_data1
smode_clas <- synoptclas(atm_data1, ncomp = 6)
smode_clas$grid_clas$ttest_anom
?t.test
df_classified %>%
group_by(.data$lon, .data$lat, .data$WT, .data$var) %>%
group_size()
library(tidyverse)
group_by(z500, lon,lat) %>% group_size()
group_by(z500, lon,lat) %>% group_size() %>% min()
group_by(z500, lon,lat) %>% group_size() %>% min() < 15
devtools::check()
devtools::check()
devtools::check()
roxygen2::roxygenise()
devtools::check()
remove.packages("synoptReg")
library(kohonen)
library(RCurl)
NBA <- read.csv(text = getURL("https://raw.githubusercontent.com/clarkdatalabs/soms/master/NBA_2016_player_stats_cleaned.csv"),
sep = ",", header = T, check.names = FALSE)
library(RCurl)
NBA <- read.csv(text = getURL("https://raw.githubusercontent.com/clarkdatalabs/soms/master/NBA_2016_player_stats_cleaned.csv"),
sep = ",", header = T, check.names = FALSE)
NBA
sample.size <- 10000
sample.rgb <- as.data.frame(matrix(nrow = sample.size, ncol = 3))
colnames(sample.rgb) <- c('R', 'G', 'B')
sample.rgb$R <- sample(0:255, sample.size, replace = T)
sample.rgb$G <- sample(0:255, sample.size, replace = T)
sample.rgb$B <- sample(0:255, sample.size, replace = T)
grid.size <- ceiling(sample.size ^ (1/2.5))
grid.size
som.grid <- somgrid(xdim = grid.size, ydim = grid.size, topo = 'hexagonal', toroidal = T)
som.grid
data.matrix(sample.rgb)
grid = som.grid
som(data.matrix(sample.rgb))
som.model a- som(data.matrix(sample.rgb))
som.model <- som(data.matrix(sample.rgb))
som.model$data
som.model$distances
som.model$grid
som.model$codes
plot(som.model)
plot(som.model,
type = 'mapping',
bg = som.events.colors[sample.int(length(som.events.colors), size = length(som.events.colors))],
keepMargins = F,
col = NA,
main = '')
roxygen2::roxygenise()
devtools::check()
devtools::check()
devtools::check()
?separate
devtools::check()
devtools::check()
devtools::check()
devtools::check()
magrittr::,
magrittr::.
tidyverse::.
devtools::check()
devtools::check()
devtools::check()
devtools::check()
