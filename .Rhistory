points <- get_lamb_points(x = 5,y = 40)
data(mslp)
lamb_clas(points = points, mslp = mslp)
table
cl <- lamb_clas(points = points, mslp = mslp)
table
table(cl)
table(cl$clas$WT)
cl <- lamb_clas(points = points, mslp = mslp,U = T)
table(cl$clas$WT)
lamb_clas2 <- function(points,mslp){
var <- vars_lamb(points,mslp,U)
WT <- apply(var,1,lamb_wt)
# clas
time <- unique(mslp$time)
clas <- tibble(time,WT)
# grid clas
grid_clas <- inner_join(clas, mslp, by = "time") %>%
group_by(.data$lon,.data$lat,.data$WT) %>%
summarise(.data$value) %>% ungroup() %>%
distinct(.data$lon,.data$lat,.data$WT,.keep_all = T)
return(list(clas = clas,
grid_clas = grid_clas))
}
vars_lamb <- function(points, mslp) {
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
x<- pp
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
var <- data.frame(SF,WF,D,ZS,ZW,FF,Z)
}
lamb_wt <- function(x){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(abs(x["Z"])<6 & x["FF"]<6) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
cl <- lamb_clas2(points = points, mslp = mslp,U = T)
cl <- lamb_clas2(points = points, mslp = mslp)
cl <- lamb_clas2(points = points, mslp = mslp)
lamb_clas2 <- function(points,mslp){
var <- vars_lamb(points,mslp)
WT <- apply(var,1,lamb_wt)
# clas
time <- unique(mslp$time)
clas <- tibble(time,WT)
# grid clas
grid_clas <- inner_join(clas, mslp, by = "time") %>%
group_by(.data$lon,.data$lat,.data$WT) %>%
summarise(.data$value) %>% ungroup() %>%
distinct(.data$lon,.data$lat,.data$WT,.keep_all = T)
return(list(clas = clas,
grid_clas = grid_clas))
}
vars_lamb <- function(points, mslp) {
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
x<- pp
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
var <- data.frame(SF,WF,D,ZS,ZW,FF,Z)
}
lamb_wt <- function(x){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(abs(x["Z"])<6 & x["FF"]<6) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
cl <- lamb_clas2(points = points, mslp = mslp)
library(tidyverse)
cl <- lamb_clas2(points = points, mslp = mslp)
cl
table(cl$clas$)
table(cl$clas$WT)
lamb_wt <- function(x,U = F){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<500 & x["FF"]<500) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
cl <- lamb_clas2(points = points, mslp = mslp)
table(cl$clas$WT)
lamb_clas <- function(points,mslp, U = FALSE){
var <- vars_lamb(points,mslp,U)
WT <- apply(var,1,lamb_wt)
# clas
time <- unique(mslp$time)
clas <- tibble(time,WT)
# grid clas
grid_clas <- inner_join(clas, mslp, by = "time") %>%
group_by(.data$lon,.data$lat,.data$WT) %>%
summarise(.data$value) %>% ungroup() %>%
distinct(.data$lon,.data$lat,.data$WT,.keep_all = T)
return(list(clas = clas,
grid_clas = grid_clas))
}
vars_lamb <- function(points, mslp, U = F) {
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
x<- pp
if(U == F){ #Trigo & DaCamara, 2000
SF <- 1.305*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 0.85*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.12*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.91*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
} else { # Jones et al., 1993
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
}
var <- data.frame(SF,WF,D,ZS,ZW,FF,Z)
}
lamb_wt <- function(x,U = F){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<500 & x["FF"]<500) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
cl <- lamb_clas(points = points, mslp = mslp,U = T)
table(cl$clas$WT)
lamb_wt <- function(x,U = F){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<1000 & x["FF"]<5000) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
cl <- lamb_clas(points = points, mslp = mslp,U = T)
table(cl$clas$WT)
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
pp
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
x<- pp
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
SF
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 0.85*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.12*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.91*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
Z
sum(abs(z)<6)
sum(abs(Z)<6)
FF
sum(abs(FF)<6)
WF
WF <- 0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5)
WF
WF <- (0.5*(x$P12+x$P13))-(0.5*(x$P4+x$P5))
WF
pp
points
plot_lamb_scheme(points)
sum(abs(FF)<6)
min(FF)
FF <- (SF^2+WF^2)
FF
min(FF)
FF <- (SF^2+WF^2)^(1/2)
FF
inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value))
names(pp)
download_ncep(lon_range = c(-10,30),month_range = c(6,7,8))
cl <-download_ncep(lon_range = c(-10,30),month_range = c(6,7,8))
lamb_clas(points,cl,U=T)
aa <-lamb_clas(points,cl,U=T)
table(aa$clas$WT)
mslp <- cl
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
x<- pp
SF <- 1.305*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
SF
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- 0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5)
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
FF
min(FF)
SF
SF <- 1.74*(0.25*(x$P5+(2*x$P9)+x$P13)-0.25*(x$P4+(2*x$P8)+x$P12))
SF
SF <- 1.74*(0.25*(x$P5+(2*x$P9)+x$P13)-0.25*(x$P4+(2*x$P8)+x$P12))
SF
FF <- ((SF^2)+(WF^2))^(1/2)
FF
min(FF)
FF <- (SF+WF)^(1/2)
FF
FF <- (SF^2+WF^2)
FF
min(FF)
SF <- 1.305*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 0.85*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.12*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.91*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
min(FF)
min(Z)
min(abs(Z))
Z <- ZS+ZW
min(abs(Z))
mslp
mslp$value<-mslp$value/100
mslp
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
x<- pp
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
SF
WF <- 0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5)
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
FF
Z <- ZS+ZW
Z
library(synoptReg)
data(mslp)
mslp$value <- mslp$value/100
?lamb_clas
points <- get_lamb_points(x = 5,y = 40)
lamb_clas(points = points, mslp = mslp)
points <- get_lamb_points(x = 5,y = 40)
x<-lamb_clas(points = points, mslp = mslp)
table(x$clas$WT)
points <- get_lamb_points(x = 5,y = 40)
x<-lamb_clas(points = points, mslp = mslp,U = T)
table(x$clas$WT)
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
library(tidyverse)
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
pp
x<- pp
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
SF
WF <- 0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5)
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
FF
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<6 & x["FF"]<6) out <- "U"
abs(x["Z"])<6 & x["FF"]<6
abs(Z)<6 & FF<6
remove.packages("synoptReg")
lamb_clas <- function(points,mslp, U = FALSE){
var <- vars_lamb(points,mslp,U)
WT <- apply(var,1,lamb_wt)
# clas
time <- unique(mslp$time)
clas <- tibble(time,WT)
# grid clas
grid_clas <- inner_join(clas, mslp, by = "time") %>%
group_by(.data$lon,.data$lat,.data$WT) %>%
summarise(.data$value) %>% ungroup() %>%
distinct(.data$lon,.data$lat,.data$WT,.keep_all = T)
return(list(clas = clas,
grid_clas = grid_clas))
}
vars_lamb <- function(points, mslp, U) {
pp <- inner_join(points, mslp, by = c("lon","lat")) %>%
select(c(.data$label,.data$time,.data$value)) %>%
pivot_wider(names_from = .data$label,values_from = .data$value)
x<- pp
if(U == F){ #Trigo & DaCamara, 2000
SF <- 1.305*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- (0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5))
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 0.85*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.12*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.91*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
} else { # Jones et al., 1993
SF <- 1.74*(0.25*(x$P5+2*x$P9+x$P13)-0.25*(x$P4+2*x$P8+x$P12))
WF <- 0.5*(x$P12+x$P13)-0.5*(x$P4+x$P5)
D <- atan(WF/SF)*(360/(2*pi))
ZS <- 1.52*(0.25*(x$P6+2*x$P10+x$P14)-0.25*(x$P5+2*x$P9+x$P3)-0.25*(x$P4+2*x$P8+x$P12)+0.25*(x$P3+2*x$P7+x$P11))
ZW <- 1.07*(0.5*(x$P15+x$P16)-0.5*(x$P8+x$P9)-0.95*(0.5*(x$P8+x$P9)-0.5*(x$P1+x$P2)))
FF <- (SF^2+WF^2)^(1/2)
Z <- ZS+ZW
}
var <- data.frame(SF,WF,D,ZS,ZW,FF,Z)
}
lamb_wt <- function(x,U){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<6 & x["FF"]<6) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
points <- get_lamb_points(x = 5,y = 40)
x<-lamb_clas(points = points, mslp = mslp,U = T)
lamb_wt <- function(x,U = T){
dir <- seq(22.5,360,45)
lev_dir <- levels(cut(seq(0,360,1),seq(22.5,360,45)))
if(abs(x["Z"])<x["FF"]){
out <- ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180)))
out <- recode(as.character(cut(out,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
}
if(abs(x["Z"])>2*x["FF"]){
if(x["Z"]>0){
out <- "C"
}else{
out <- "A"
}
}
if(x["FF"]<abs(x["Z"])&abs(x["Z"])<2*x["FF"]){
if(x["Z"]>0){
out_p1 <- "C"
}else{
out_p1 <- "A"
}
out_p2 <- unlist(ifelse(x["WF"]>0 & x["SF"]>0, x["D"]+180,ifelse(x["WF"]>0 & x["SF"]<0,x["D"]+360,ifelse(x["WF"]<0 & x["SF"]<0,x["D"],x["D"]+180))))
out_p2 <- recode(as.character(cut(out_p2,dir)),"(22.5,67.5]"="NE","(67.5,112]"="E","(112,158]"="SE",
"(158,202]"="S","(202,248]"="SW","(248,292]"="W","(292,338]"="NW",.missing = "N")
out <- as.character(paste(out_p1,out_p2,sep=""))
}
# Only works when U = TRUE.
if(U!= FALSE & abs(x["Z"])<6 & x["FF"]<6) out <- "U"
ifelse(!is.na(out),return(out),return(NA))
}
points <- get_lamb_points(x = 5,y = 40)
x<-lamb_clas(points = points, mslp = mslp,U = T)
x
table(x$clas$WT)
points <- get_lamb_points(x = 5,y = 40)
x<-lamb_clas(points = points, mslp = mslp,U = F)
table(x$clas$WT)
devtools::check()
devtools::check()
