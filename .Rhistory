cores = 1, norm = T) {
dataset <- x %>%
select(-units) %>%
group_by(.data$var, .data$x, .data$y) %>%
mutate(value = scale(.data$value)) %>%
unite("varxy",c(var,x,y), sep = "_") %>%
tidyr::pivot_wider(names_from = .data$varxy, values_from= .data$value)
# Transforming into a matrix
matrix_vars <- dataset %>% dplyr::ungroup() %>%
dplyr::select(-time) %>% as.matrix()
# Creating a SOM network
WTs = xdim*ydim
som_vars <- som(X = matrix_vars,
grid = somgrid(xdim = xdim,
ydim = ydim,
neighbourhood.fct = "gaussian",
topo = "rectangular"),
rlen = iter,
alpha = alpha,
keep.data = T,
dist.fcts = dist.fcts,
mode = mode,
cores = cores)
grid_som_vars <- som_vars$codes[[1]] %>%
as.data.frame() %>% as_tibble() %>%
mutate(xdim = rep(1:xdim,xdim),
ydim = rep(1:ydim, each = ydim),
WT = 1:WTs) %>%
relocate(.data$ydim, .before = 1) %>%
relocate(.data$xdim, .before = .data$ydim) %>%
relocate(.data$WT, .before = .data$xdim) %>%
pivot_longer(4:ncol(.),names_to = "grid") %>%
separate(col = .data$grid, into = c("var","x","y"),sep = "_") %>%
mutate_at(.vars = vars(.data$x,.data$y), .funs = as.numeric) %>%
select(var,x,y,WT,xdim,ydim)
clas <- tibble(time = unique(x$time), WT = som_vars$unit.classif)
df_classified <- x %>%
inner_join(clas, by = "time") %>%
inner_join(grid_som_vars, by = c("var","x","y","WT"))
df_classified_panels <- df_classified %>%
group_by(.data$x, .data$y, .data$WT, .data$var) %>%
mutate(mean_WT_value = mean(value),
# pval_ttest = t.test(.data$anom_value, mu = 0)$p.value,
cv_WT_value = (sd(value) / mean(value)) * 100) %>%
select(-value) %>%
ungroup() %>%
distinct(x, y, WT, var, .keep_all = T)
return(list(clas = clas,
grid_clas = df_classified_panels,
som_info = som_vars))
}
som_cl <- som_clas(z500, xdim = 4, ydim = 4, iter = 200)
roxygen2::roxygenise()
roxygen2::roxygenise()
as_synoptreg <- function(x){
varname <- varnames(x)
unit <- unique(units(x))
df <- terra::as.data.frame(x, xy = T) %>%
pivot_longer(names_to = "time",values_to = "value", 3:ncol(.)) %>%
mutate(time = as_date(str_remove(time, "X")),
var = varname,
units = unit)
return(df)
}
roxygen2::roxygenise()
roxygen2::roxygenise()
checkCRAN()
devtools::check()
devtools::check()
library(devtools)
find_rtools()
find_rtools()
library(devtools)
install.packages("devtools")
library(devtools)
find_rtools()
devtools::check()
roxygen2::roxygenise()
install.packages("terra")
library(terra)
install.packages("terra")
install.packages("C:/Users/gc/Downloads/terra_1.7-46.zip", repos = NULL, type = "win.binary")
library(terra)
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::check()
library(ncdf4)
install.packages(c('maptools', 'ncdf4', 'rgeos', 'udunits2', 'gridExtra'))
devtools::check()
devtools::check()
inherits(x = x)
devtools::check()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::check()
roxygen2::roxygenise()
devtools::check()
roxygen2::roxygenise()
devtools::check()
devtools::check()
roxygen2::roxygenise()
devtools::check()
is.Date()
roxygen2::roxygenise()
devtools::check()
roxygen2::roxygenise()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
x = -5
y = 40
xi <- 10
yi <- 5
gp_y <- y - seq(-10,10,by= 5)
gp_x <- x - c(-15,-5,5,15)
pre_scheme <- expand.grid(gp_y,gp_x) %>%
setNames(c("y","x"))
corners <- subset(pre_scheme, x == min(x) & y == min(y)|
x == min(x) & y == max(y)|
x == max(x) & y == min(y)|
x == max(x) & y == max(y))
jc_scheme <- cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(TF == F) %>%
select(-TF) %>%
cbind.data.frame(c("P6","P10","P14",
"P2","P5","P9","P13","P16",
"P1","P4","P8","P12","P15",
"P3","P7","P11")) %>%
setNames(c("y","x","label")) %>%
relocate(x,.before = y)
pre_scheme
interaction(pre_scheme) %in% interaction(corners)
TF = interaction(pre_scheme) %in% interaction(corners)
jc_scheme <- bind_cols(pre_scheme,
TF = TF) %>%
filter(TF == F) %>%
select(-TF) %>%
cbind.data.frame(c("P6","P10","P14",
"P2","P5","P9","P13","P16",
"P1","P4","P8","P12","P15",
"P3","P7","P11")) %>%
setNames(c("y","x","label")) %>%
relocate(x,.before = y)
library(dplyr)
TF = interaction(pre_scheme) %in% interaction(corners)
jc_scheme <- bind_cols(pre_scheme,
TF = TF) %>%
filter(TF == F) %>%
select(-TF) %>%
cbind.data.frame(c("P6","P10","P14",
"P2","P5","P9","P13","P16",
"P1","P4","P8","P12","P15",
"P3","P7","P11")) %>%
setNames(c("y","x","label")) %>%
relocate(x,.before = y)
jc_scheme
devtools::check()
bind_cols(pre_scheme,
TF = TF) %>%
filter(TF == F) %>%
select(-TF)
bind_cols(pre_scheme,
TF = TF) %>%
filter(TF == F) %>%
dplyr::select(-TF)
bind_cols(pre_scheme,
TF = TF) %>%
filter(TF == F)
xi <- 10
yi <- 5
gp_y <- y - seq(-10,10,by= 5)
gp_x <- x - c(-15,-5,5,15)
pre_scheme <- expand.grid(gp_y,gp_x) %>%
setNames(c("y","x"))
corners <- subset(pre_scheme, x == min(x) & y == min(y)|
x == min(x) & y == max(y)|
x == max(x) & y == min(y)|
x == max(x) & y == max(y))
TF = interaction(pre_scheme) %in% interaction(corners)
bind_cols(pre_scheme,
TF = TF) %>%
filter(TF == F)
x
jc_scheme <- cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(TF == F) %>%
select(-TF) %>%
cbind.data.frame(c("P6","P10","P14",
"P2","P5","P9","P13","P16",
"P1","P4","P8","P12","P15",
"P3","P7","P11")) %>%
setNames(c("y","x","label")) %>%
relocate(x,.before = y)
TF = interaction(pre_scheme) %in% interaction(corners)
TF
xi <- 10
yi <- 5
gp_y <- y - seq(-10,10,by= 5)
gp_x <- x - c(-15,-5,5,15)
pre_scheme <- expand.grid(gp_y,gp_x) %>%
setNames(c("y","x"))
corners <- subset(pre_scheme, x == min(x) & y == min(y)|
x == min(x) & y == max(y)|
x == max(x) & y == min(y)|
x == max(x) & y == max(y))
jc_scheme <- cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(TF == F) %>%
select(-TF) %>%
cbind.data.frame(c("P6","P10","P14",
"P2","P5","P9","P13","P16",
"P1","P4","P8","P12","P15",
"P3","P7","P11")) %>%
setNames(c("y","x","label")) %>%
relocate(x,.before = y)
jc_scheme <- cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(TF == F) %>%
dplyr::select(-TF) %>%
cbind.data.frame(c("P6","P10","P14",
"P2","P5","P9","P13","P16",
"P1","P4","P8","P12","P15",
"P3","P7","P11")) %>%
setNames(c("y","x","label")) %>%
relocate(x,.before = y)
TF = interaction(pre_scheme) %in% interaction(corners)
TF
cbind.data.frame(pre_scheme,
TF) %>%
filter(TF == F) %>%
select(-TF)
cbind.data.frame(pre_scheme,
TF) %>%
filter(TF == F)
cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(TF == F)
xi <- 10
yi <- 5
gp_y <- y - seq(-10,10,by= 5)
gp_x <- x - c(-15,-5,5,15)
pre_scheme <- expand.grid(gp_y,gp_x) %>%
setNames(c("y","x"))
corners <- subset(pre_scheme, x == min(x) & y == min(y)|
x == min(x) & y == max(y)|
x == max(x) & y == min(y)|
x == max(x) & y == max(y))
interaction(pre_scheme) %in% interaction(corners))
interaction(pre_scheme) %in% interaction(corners)
cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners))
cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(TF == F)
cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners))
cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(isFALSE(TF))
cbind.data.frame(pre_scheme,
TRUEFALSE = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(isFALSE(TRUEFALSE))
cbind.data.frame(pre_scheme,
TRUEFALSE = interaction(pre_scheme) %in% interaction(corners))
cbind.data.frame(pre_scheme,
TRUEFALSE = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(isFALSE(TRUEFALSE))
pre_scheme %>%
bind_cols(interaction(pre_scheme) %in% interaction(corners)) %>%
filter(isFALSE(TRUEFALSE))
pre_scheme %>%
bind_cols(interaction(pre_scheme) %in% interaction(corners))
jc_scheme <- pre_scheme %>%
bind_cols(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3)
jc_scheme
pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3)
pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3) %>%
filter(isFALSE(TF))
pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3)
pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3) %>%
filter(TF == FALSE)
pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3)
pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3) %>%
as_tibble()
pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3) %>%
as_tibble() %>%
dplyr::filter(TF == F)
pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3) %>%
as_tibble() %>%
dplyr::filter(isFALSE(TF))
pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3) %>%
as_tibble() %>%
dplyr::filter(isFALSE(TF))
pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3) %>%
as_tibble() %>%
dplyr::filter(TF == F)
jc_scheme <- pre_scheme %>%
cbind.data.frame(interaction(pre_scheme) %in% interaction(corners)) %>%
rename("TF" = 3) %>%
as_tibble() %>%
dplyr::filter(TF == F) %>%
select(-TF) %>%
cbind.data.frame(c("P6","P10","P14",
"P2","P5","P9","P13","P16",
"P1","P4","P8","P12","P15",
"P3","P7","P11")) %>%
setNames(c("y","x","label")) %>%
relocate(x,.before = y)
jc_scheme
devtools::check()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::check()
devtools::check()
roxygen2::roxygenise()
devtools::check()
devtools::check()
x
inherits(-4,"SpatRaster")
is(4, "SpatRaster")
roxygen2::roxygenise()
devtools::check()
roxygen2::roxygenise()
devtools::check()
data(msl)
msl
xmin = -180
xmax = 180
ymin = -80
ymax = 80
U = T
thr = c(6,6)
cores = 1
lons = seq(xmin,xmax,2.5)
lats = seq(ymin,ymax,2.5)
grid <- expand.grid(lons, lats) %>%
filter(.data$Var1 !=-180)
# get lamb points to all grid
points <- apply(grid,
MARGIN = 1,
function(x) get_lamb_points_helper(x[1], x[2]))
points
spatial_lamb(msl, xmin = 5,xmax = 15, ymin = 40, ymax = 50, cores = 1)
msl
xmin = 5
xmax = 15
ymin = 40
ymax = 50
cores = 1
lons = seq(xmin,xmax,2.5)
lats = seq(ymin,ymax,2.5)
grid <- expand.grid(lons, lats) %>%
filter(.data$Var1 !=-180)
# get lamb points to all grid
points <- apply(grid,
MARGIN = 1,
function(x) get_lamb_points_helper(x[1], x[2]))
points
lat_max_required <- max(sapply(points, function(x) max(x[[1]])))
lat_min_required <- min(sapply(points, function(x) min(x[[1]])))
lon_max_required <- max(sapply(points, function(x) max(x[[2]])))
lon_min_required <- min(sapply(points, function(x) min(x[[2]])))
lat_max_required
lat_min_required
lon_max_required
lon_min_required
summary(msl)
cbind.data.frame(pre_scheme,
TF = interaction(pre_scheme) %in% interaction(corners)) %>%
filter(.data$TF == F) %>%
select(-.data$TF) %>%
cbind.data.frame(c("P6","P10","P14",
"P2","P5","P9","P13","P16",
"P1","P4","P8","P12","P15",
"P3","P7","P11"))
roxygen2::roxygenise()
devtools::check()
roxygen2::roxygenise()
devtools::check()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::check()
msl
roxygen2::roxygenise()
devtools::check()
roxygen2::roxygenise()
devtools::check()
devtools::build()
devtools::check_built()
devtools::check_built("C:/Users/gc/Desktop/synoptReg_1.2.1.tar.gz")
roxygen2::roxygenise()
devtools::build()
roxygen2::roxygenise()
devtools::build()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::build()
roxygen2::roxygenise()
devtools::check()
roxygen2::roxygenise()
devtools::check()
msl
msl <- dplyr::filter(msl, time >= 2000-01-01, time <= 2000-03-30)
msl
roxygen2::roxygenise()
devtools::check()
library(lubridate)
library(dplyr)
data(msl)
msl <- filter(msl, time >= as_date(2000-01-01), time <= as_date(2000-03-30))
msl
msl <- filter(msl, time >= "2000-01-01", time <= "2000-03-30")
msl
library(lubridate)
library(dplyr)
data(msl)
msl <- filter(msl, time >= "2000-01-01", time <= "2000-03-30")
msl
tail(msl)
roxygen2::roxygenise()
devtools::check()
devtools::build()
remove.packages("synoptReg")
remotes::install_github("lemuscanovas/synoptReg")
library(synoptReg)
remove.packages("synoptReg")
devtools::check()
devtools::build()
remotes::install_github("giuliogenova/meteobrowser")
library(MeteoBrowser)
install.packages("spdplyr")
remotes::install_github("mdsumner/spdplyr")
remotes::install_github("giuliogenova/meteobrowser")
devtools::install_git("https://gitlab.inf.unibz.it/earth_observation_public//MonalisR")
remotes::install_github("giuliogenova/meteobrowser")
library(MeteoBrowser)
MeteoBrowser::get_provBz_data
?get_provBz_data
tot_tab_def
MeteoBrowser::legend_tab_def
MeteoBrowser::sspat_def
MeteoBrowser::sspat_def %>% plot
MeteoBrowser::se_spread_def
tot_tab_def
tot_tab_def
unique(tot_tab_def$DESC_E)
filter(tot_tab_def, DESC_E == "Snow height - cm")
remotes::install_github("lemuscanovas/synoptReg")
library(synoptReg)
roxygen2::roxygenise()
devtools::build()
roxygen2::roxygenise()
devtools::build()
remove.packages("synoptReg")
remotes::install_github("lemuscanovas/synoptReg")
library(synoptReg)
roxygen2::roxygenise()
devtools::check()
roxygen2::roxygenise()
devtools::check()
devtools::build()
remove.packages("synoptReg")
